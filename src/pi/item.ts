import type { ByteTag, ShortTag } from "nbtify";

export interface Item {
  id: ShortTag<ItemResource>; // how to wrap this enum as a number like you can for a string with template literals?
  Damage: ShortTag;
  Count: ByteTag;
}

export enum ItemResource {
  iron_shovel = 256,
  iron_pickaxe,
  iron_axe,
  flint_steel,
  apple,
  bow,
  arrow,
  coal,
  diamond,
  iron_ingot,
  gold_ingot,
  iron_sword,
  wooden_sword,
  wooden_shovel,
  wooden_pickaxe,
  wooden_axe,
  stone_sword,
  stone_shovel,
  stone_pickaxe,
  stone_axe,
  diamond_sword,
  diamond_shovel,
  diamond_pickaxe,
  diamond_axe,
  stick,
  bowl,
  mushroom_stew,
  gold_sword,
  gold_shovel,
  gold_pickaxe,
  gold_axe,
  string,
  feather,
  gunpowder,
  wooden_hoe,
  stone_hoe,
  iron_hoe,
  diamond_hoe,
  gold_hoe,
  seeds,
  wheat,
  bread,
  leather_cap,
  leather_tunic,
  leather_pants,
  leather_boots,
  chain_helmet,
  chain_chestplate,
  chain_leggings,
  chain_boots,
  iron_helmet,
  iron_chestplate,
  iron_leggings,
  iron_boots,
  diamond_helmet,
  diamond_chestplate,
  diamond_leggings,
  diamond_boots,
  gold_helmet,
  gold_chestplate,
  gold_leggings,
  gold_boots,
  flint,
  raw_porkchop,
  cooked_porkchop,
  painting,
  sign = 323,
  wooden_door,
  iron_door = 330,
  snowball = 332,
  leather = 334,
  clay_brick = 336,
  clay,
  sugar_cane,
  paper,
  book,
  slimeball,
  egg = 344,
  compass,
  clock = 347,
  glowstone_dust,
  dye = 351,
  bone,
  sugar,
  bed = 356,
  shears = 359,
  melon,
  melon_seeds = 362,
  raw_beef,
  steak,
  raw_chicken,
  cooked_chicken,
  nether_brick = 405,
  nether_quartz,
  camera = 456,
}